{:path [], :nextjournal/value [{:path [0], :nextjournal/value [{:path [0 0], :nextjournal/value [{:path [0 0 0], :nextjournal/value {:nextjournal/presented {:path [0 0 0], :nextjournal/value [:div.flex.items-center.overflow-hidden.gap-4 [:img.h-12.my-0 {:src "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Clojure_logo.svg/800px-Clojure_logo.svg.png"}] [:h1 "Clojure"]], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drepwH6RgWCBHjgipzY4dwBoTdc2c-result-0-0-0"}}, :nextjournal/blob-id "5dtkDuP6QgDUHrxFTveXqA5qviYuAz"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drepwH6RgWCBHjgipzY4dwBoTdc2c-result-0-0-0"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [0 1], :nextjournal/value [{:path [0 1 0], :nextjournal/value {:nextjournal/presented {:path [0 1 0], :nextjournal/value [:h4.absolute.top-60 "Francisco Zizzi"], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drjM6Hp1jMSL9bbn8dcfBxuSxVuDP-result-0-1-0"}}, :nextjournal/blob-id "5dr1XuDvFX1kY5XtaNdbG6kwb7jfu7"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drjM6Hp1jMSL9bbn8dcfBxuSxVuDP-result-0-1-0"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value ["h1" {:id "brief-history"} [:<> "Brief History"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [1 1], :nextjournal/value [:ul [:li [:<> [:<> "Released in 2007"]]] [:li [:<> [:<> "Created by Rich Hickey"]]] [:li [:<> [:<> "\"I wanted a language as acceptable as Java or C#, put supporting a much simpler programming model, to use for the kinds of information system development I had been doing professionally\""]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [2], :nextjournal/value [{:path [2 0], :nextjournal/value ["h1" {:id "main-features"} [:<> "Main Features"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [2 1], :nextjournal/value [:ul [:li [:<> [:<> "Functional"]]] [:li [:<> [:<> "Dynamic"]]] [:li [:<> [:<> "Homoiconic"]] [:ul [:li [:<> [:<> "Clojure programs are represented by Clojure data structures."]]]]] [:li [:<> [:<> "Immutability"]]] [:li [:<> [:<> "Great with concurrency and data processing/manipulation"]]] [:li [:<> [:<> "Live programming through the REPL"]]] [:li [:<> [:<> "Runs on the JVM"]] [:ul [:li [:<> [:<> "Compiles to a .jar file, so anyone with Java installed can run it."]]]]] [:li [:<> [:<> "Can compile to Javascript"]] [:ul [:li [:<> [:<> "Makes frontend development with Clojure easier through React wrappers, for example."]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [3], :nextjournal/value [{:path [3 0], :nextjournal/value ["h1" {:id "the-repl"} [:<> "The REPL"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [3 1], :nextjournal/value [:p [:<> "The REPL (Read-Eval Print Loop) is a programming environment which enables the programmer to interact with a running"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Clojure program and modify it, evaluating one code expression at a time."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "This enables a quick feedback loop not available in most other languages."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "We can think of the REPL as something similar to SSH, in the same way you can interact with a remote server, we can use the REPL to"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "interact with a running Clojure process."]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [3 2], :nextjournal/value [{:path [3 2 0], :nextjournal/value {:nextjournal/presented {:path [3 2 0], :nextjournal/value [:img {:src "https://clojure.org/images/content/guides/repl/show-terminal-repl.gif"}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dr4mZzNL7PzCUS82WAGKnaS3SbQkf-result-3-2-0"}}, :nextjournal/blob-id "5dstMW5hMd98r6toQvetUo8r3R7pYf"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dr4mZzNL7PzCUS82WAGKnaS3SbQkf-result-3-2-0"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [4], :nextjournal/value [{:path [4 0], :nextjournal/value ["h1" {:id "syntax"} [:<> "Syntax"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 1], :nextjournal/value [:p [:<> "The syntax consists of:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 2], :nextjournal/value ["h4" {:id "numeric-types"} [:<> "Numeric types"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 3], :nextjournal/value [{:path [4 3 0], :nextjournal/value "985 \t\t\t; Integer", :nextjournal/render-opts {:loc {:line 52, :end-line 52, :column 1, :end-column 4}, :id "slideshow/anon-expr-5dqr23mqFGUfY8P47rnmDtVgz21ypW-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 4], :nextjournal/value [{:path [4 4 0], :nextjournal/value "3.14\t\t\t; Floating Point", :nextjournal/render-opts {:loc {:line 53, :end-line 53, :column 1, :end-column 5}, :id "slideshow/anon-expr-5driVozJmQ4nmL5uttijRokVGt42Vu-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 5], :nextjournal/value [{:path [4 5 0], :nextjournal/value "1/3\t\t\t\t; Ratio", :nextjournal/render-opts {:loc {:line 54, :end-line 54, :column 1, :end-column 4}, :id "slideshow/anon-expr-5dtWU9WFdhj6fGK4XPjjKsNcEBmMsH-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 6], :nextjournal/value ["h4" {:id "character-types"} [:<> "Character types"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 7], :nextjournal/value [{:path [4 7 0], :nextjournal/value "\"Hello World!\"\t; String", :nextjournal/render-opts {:loc {:line 56, :end-line 56, :column 1, :end-column 15}, :id "slideshow/anon-expr-5duEf7McV6JncMLpYcfFfUjkeaPkF6-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 8], :nextjournal/value [{:path [4 8 0], :nextjournal/value "\\e\t\t\t\t; Character", :nextjournal/render-opts {:loc {:line 57, :end-line 57, :column 1, :end-column 3}, :id "slideshow/anon-expr-5dtmNjXzmcxfuqhjrfeqnrPc8zy7G2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 9], :nextjournal/value [{:path [4 9 0], :nextjournal/value "[#\"[0-9]+\"] \t; Regular expression (without the [])", :nextjournal/render-opts {:loc {:line 58, :end-line 58, :column 1, :end-column 12}, :id "slideshow/anon-expr-5dqngAamBPMWt4f7EQdPoKQKJuDymp-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 10], :nextjournal/value ["h4" {:id "symbols-and-idents"} [:<> "Symbols and idents"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 11], :nextjournal/value [{:path [4 11 0], :nextjournal/value "map\t\t\t\t; Symbol", :nextjournal/render-opts {:loc {:line 60, :end-line 60, :column 1, :end-column 4}, :id "slideshow/anon-expr-5dsFiPDG9kZiysCUUBYEvUzmRAvBuN-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 12], :nextjournal/value [{:path [4 12 0], :nextjournal/value "[true false] \t; Booleans", :nextjournal/render-opts {:loc {:line 62, :end-line 62, :column 1, :end-column 13}, :id "slideshow/anon-expr-5dtfx82rJYWd1RV354zg8q1j1HBE6b-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 13], :nextjournal/value [{:path [4 13 0], :nextjournal/value ":hello\t\t\t; Keyword", :nextjournal/render-opts {:loc {:line 63, :end-line 63, :column 1, :end-column 7}, :id "slideshow/anon-expr-5dqzXM1e62sATLmqVJX8uFPFBS91eU-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 14], :nextjournal/value [{:path [4 14 0], :nextjournal/value ":some/thing\t\t; Keyword with namespace", :nextjournal/render-opts {:loc {:line 64, :end-line 64, :column 1, :end-column 12}, :id "slideshow/anon-expr-5du1ZxfBtxQkJT1jvrFC41LK8yt55j-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 15], :nextjournal/value ["h4" {:id "literal-collections"} [:<> "Literal collections"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 16], :nextjournal/value [{:path [4 16 0], :nextjournal/value "'(1 2 \"Three\")\t\t\t; List", :nextjournal/render-opts {:loc {:line 66, :end-line 66, :column 1, :end-column 15}, :id "slideshow/anon-expr-5ds3u61Lidj1U9w6PDwi6XQcYsw8yR-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 17], :nextjournal/value [{:path [4 17 0], :nextjournal/value "[1 :two \"Three\"]\t\t; Vector", :nextjournal/render-opts {:loc {:line 67, :end-line 67, :column 1, :end-column 17}, :id "slideshow/anon-expr-5dsYM9FZEhi3bcEryQWbLQqQR8rbJU-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 18], :nextjournal/value [{:path [4 18 0], :nextjournal/value "{:key1 \"val1\" :key2 2}\t; Map", :nextjournal/render-opts {:loc {:line 68, :end-line 68, :column 1, :end-column 23}, :id "slideshow/anon-expr-5ds7QQX4HVgetjokrEJcycrFG8ryGm-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 19], :nextjournal/value [{:path [4 19 0], :nextjournal/value "#{:one 2 \"Three\" 4.5}\t; Set", :nextjournal/render-opts {:loc {:line 69, :end-line 69, :column 1, :end-column 22}, :id "slideshow/anon-expr-5ds9SRcY78hDXA53PoPZ6E9amQW1pf-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [5], :nextjournal/value [{:path [5 0], :nextjournal/value ["h1" {:id "evaluation"} [:<> "Evaluation"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [5 1], :nextjournal/value [:p [:<> "Clojure reads and evaluates expressions differently."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "In java source code is read as characters by the compiler, which produces bytecode which can be loaded by the JVM:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [5 2], :nextjournal/value [{:path [5 2 0], :nextjournal/value {:nextjournal/presented {:path [5 2 0], :nextjournal/value [:img {:src "https://www.clojure.org/images/content/guides/learn/syntax/traditional-evaluation.png"}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dspXBtF44pPRdbMcDoaEtbaJr9jyz-result-5-2-0"}}, :nextjournal/blob-id "5drjhuC29jEuCtXtpJfbyRhVsKKRDj"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dspXBtF44pPRdbMcDoaEtbaJr9jyz-result-5-2-0"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [5 3], :nextjournal/value [:p [:<> "In Clojure, source code is read as characters by the Reader (This separation between the reader and compiler is what"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "makes room for macros, which we'll see later). The reader can read from a .clj file or from"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Expressions received interactively through the REPL. The reader produces Clojure data that the compiler then uses"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "to produce the bytecode for the JVM:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [5 4], :nextjournal/value [{:path [5 4 0], :nextjournal/value {:nextjournal/presented {:path [5 4 0], :nextjournal/value [:img {:src "https://www.clojure.org/images/content/guides/learn/syntax/clojure-evaluation.png"}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dthkHfLbgFrzchGPkMrFqXAZgNh6M-result-5-4-0"}}, :nextjournal/blob-id "5dsF5BR2TGksgnFBnAUTGUSSttXEh1"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dthkHfLbgFrzchGPkMrFqXAZgNh6M-result-5-4-0"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [5 5], :nextjournal/value [:p [:<> "A key difference is the compilation unit: In Java it is a class or .java file, while in Clojure it is an expression."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Files in Clojure are read as series of expressions, you could type each expression from a file into the REPL and you"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "would get the same result."]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [6], :nextjournal/value [{:path [6 0], :nextjournal/value ["h1" {:id "evaluation-2"} [:<> "Evaluation"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [6 1], :nextjournal/value [:p [:<> "Literals evaluate themselves:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [6 2], :nextjournal/value [{:path [6 2 0], :nextjournal/value "\"Hello!\"", :nextjournal/render-opts {:loc {:line 90, :end-line 90, :column 1, :end-column 9}, :id "slideshow/anon-expr-5dssnuvh1tjfyjZQRU8GJ78v9adDow-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [6 2 1], :nextjournal/value {:nextjournal/presented {:path [6 2 1], :nextjournal/value "Hello!", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dssnuvh1tjfyjZQRU8GJ78v9adDow-result-6-2-1"}}, :nextjournal/blob-id "5ds1H6fWtUx2siVAwR36rmV6ZkXmZc"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dssnuvh1tjfyjZQRU8GJ78v9adDow-result-6-2-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [6 3], :nextjournal/value [:p [:<> "Clojure is "] [:strong [:<> "homoiconic"]] [:<> ", which basically means that it's written with its own data structures."]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [6 4], :nextjournal/value [:p [:<> "Non-empty lists are considered "] [:em [:<> "calls"]] [:<> ". The first element is evaluated as a function call:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [6 5], :nextjournal/value [{:path [6 5 0], :nextjournal/value "(+ 1 2 3)", :nextjournal/render-opts {:loc {:line 94, :end-line 94, :column 1, :end-column 10}, :id "slideshow/anon-expr-5dsL5sPd2EWmdmJXZW1YGEqyA57TRH-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [6 5 1], :nextjournal/value {:nextjournal/presented {:path [6 5 1], :nextjournal/value 6, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsL5sPd2EWmdmJXZW1YGEqyA57TRH-result-6-5-1"}}, :nextjournal/blob-id "5du1ZLQKSjPYYHUzwXfBTN1NiPeCyQ"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsL5sPd2EWmdmJXZW1YGEqyA57TRH-result-6-5-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [6 6], :nextjournal/value [:p [:<> "If you don't want to evaluate the contents of a list, use ':"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [6 7], :nextjournal/value [{:path [6 7 0], :nextjournal/value "'(+ 1 2 3)", :nextjournal/render-opts {:loc {:line 96, :end-line 96, :column 1, :end-column 11}, :id "slideshow/anon-expr-5dsophEuMoRxB9QdPvw14xqrBbEmbP-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [6 7 1], :nextjournal/value {:nextjournal/presented {:path [6 7 1], :nextjournal/value [{:path [6 7 1 0], :nextjournal/value +, :nextjournal/viewer {:name nextjournal.clerk.viewer/symbol-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-keyword.inspected-value (str x)]), :hash "5dtwc5kkzq7mnJapK1WH5rcPgXtaUw"}} {:path [6 7 1 1], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [6 7 1 2], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [6 7 1 3], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsophEuMoRxB9QdPvw14xqrBbEmbP-result-6-7-1"}}, :nextjournal/blob-id "5duJNV95Zv13WRSSFpnKz1T2cPyoN3"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsophEuMoRxB9QdPvw14xqrBbEmbP-result-6-7-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [7], :nextjournal/value [{:path [7 0], :nextjournal/value ["h1" {:id "boolean-expressions"} [:<> "Boolean Expressions"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 1], :nextjournal/value ["h4" {:id "equality"} [:<> "Equality"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 2], :nextjournal/value [{:path [7 2 0], :nextjournal/value "(= #{1 2 3} #{3 2 1})", :nextjournal/render-opts {:loc {:line 101, :end-line 101, :column 1, :end-column 22}, :id "slideshow/anon-expr-5dtpd8CofWspNWb85VC3pQhYa3q6uG-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 2 1], :nextjournal/value {:nextjournal/presented {:path [7 2 1], :nextjournal/value true, :nextjournal/viewer {:name nextjournal.clerk.viewer/boolean-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-bool.inspected-value (str x)]), :hash "5drYZi1ixy8HcW8uKJ6GoMNhasTEGB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtpd8CofWspNWb85VC3pQhYa3q6uG-result-7-2-1"}}, :nextjournal/blob-id "5druyF3Zrrv7oX13yW9owjpZ3MYgMh"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtpd8CofWspNWb85VC3pQhYa3q6uG-result-7-2-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 3], :nextjournal/value [{:path [7 3 0], :nextjournal/value "(= true false)", :nextjournal/render-opts {:loc {:line 102, :end-line 102, :column 1, :end-column 15}, :id "slideshow/anon-expr-5drg7iGSPiiVuw6LEZoMNGZecq9rwg-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 3 1], :nextjournal/value {:nextjournal/presented {:path [7 3 1], :nextjournal/value false, :nextjournal/viewer {:name nextjournal.clerk.viewer/boolean-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-bool.inspected-value (str x)]), :hash "5drYZi1ixy8HcW8uKJ6GoMNhasTEGB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drg7iGSPiiVuw6LEZoMNGZecq9rwg-result-7-3-1"}}, :nextjournal/blob-id "5dqvLZvTTyepAE3nLwxM3SnZKVQzG7"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drg7iGSPiiVuw6LEZoMNGZecq9rwg-result-7-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 4], :nextjournal/value ["h4" {:id "or"} [:<> "Or"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 5], :nextjournal/value [:p [:<> "Returns the first true value or the last value if no true values are found"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 6], :nextjournal/value [{:path [7 6 0], :nextjournal/value "(or false nil \"Hello! :)\" true)", :nextjournal/render-opts {:loc {:line 105, :end-line 105, :column 1, :end-column 32}, :id "slideshow/anon-expr-5dsyZgshEAvNvh1aRAuax8XySmXwsx-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 6 1], :nextjournal/value {:nextjournal/presented {:path [7 6 1], :nextjournal/value "Hello! :)", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsyZgshEAvNvh1aRAuax8XySmXwsx-result-7-6-1"}}, :nextjournal/blob-id "5dqxd8jyXYUgzGyHRBnz3VUPMN8iWM"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsyZgshEAvNvh1aRAuax8XySmXwsx-result-7-6-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 7], :nextjournal/value [{:path [7 7 0], :nextjournal/value "(or false false nil)", :nextjournal/render-opts {:loc {:line 106, :end-line 106, :column 1, :end-column 21}, :id "slideshow/anon-expr-5dtcwxMVi7yJEkPa5jDUcrkc3rz8An-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 7 1], :nextjournal/value {:nextjournal/presented {:path [7 7 1], :nextjournal/value nil, :nextjournal/viewer {:name nextjournal.clerk.viewer/nil-viewer, :render-fn #viewer-fn (fn [_] [:span.cmt-default.inspected-value "nil"]), :hash "5ds5uDqqy4yJDMFDdH4gQZN84hJLZM"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtcwxMVi7yJEkPa5jDUcrkc3rz8An-result-7-7-1"}}, :nextjournal/blob-id "5duKBGLmNTBkun4C4qg8ZiFhPPWAft"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtcwxMVi7yJEkPa5jDUcrkc3rz8An-result-7-7-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 8], :nextjournal/value ["h4" {:id "and"} [:<> "And"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 9], :nextjournal/value [:p [:<> "Returns the first false value or the last value if no false values are found"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 10], :nextjournal/value [{:path [7 10 0], :nextjournal/value "(and 1 2 3 4 nil 5)", :nextjournal/render-opts {:loc {:line 109, :end-line 109, :column 1, :end-column 20}, :id "slideshow/anon-expr-5dtABuv4AgzJe3Hj93Rb1iRSMAzSCd-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 10 1], :nextjournal/value {:nextjournal/presented {:path [7 10 1], :nextjournal/value nil, :nextjournal/viewer {:name nextjournal.clerk.viewer/nil-viewer, :render-fn #viewer-fn (fn [_] [:span.cmt-default.inspected-value "nil"]), :hash "5ds5uDqqy4yJDMFDdH4gQZN84hJLZM"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtABuv4AgzJe3Hj93Rb1iRSMAzSCd-result-7-10-1"}}, :nextjournal/blob-id "5dtzDhCWXThB3QoAT2ZE1rAsyTM2rC"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtABuv4AgzJe3Hj93Rb1iRSMAzSCd-result-7-10-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 11], :nextjournal/value [{:path [7 11 0], :nextjournal/value "(and 1 2 3 4)", :nextjournal/render-opts {:loc {:line 110, :end-line 110, :column 1, :end-column 14}, :id "slideshow/anon-expr-5dto64GAfcoUWvW3pRCCeVGd73Gff3-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 11 1], :nextjournal/value {:nextjournal/presented {:path [7 11 1], :nextjournal/value 4, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dto64GAfcoUWvW3pRCCeVGd73Gff3-result-7-11-1"}}, :nextjournal/blob-id "5dtadaFipQA9S2L2mHPbrYMVf8bWS3"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dto64GAfcoUWvW3pRCCeVGd73Gff3-result-7-11-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 12], :nextjournal/value [:p [:<> "nil and false are considered false values, everything else is considered true"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [8], :nextjournal/value [{:path [8 0], :nextjournal/value ["h1" {:id "control-flow"} [:<> "Control Flow"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [8 1], :nextjournal/value [:p [:<> "(if boolean-form"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "then-form"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "optional-else-from)"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [8 2], :nextjournal/value [{:path [8 2 0], :nextjournal/value "(if 4\n\t\"True!\"\n\t\"False :(\")", :nextjournal/render-opts {:loc {:line 118, :end-line 120, :column 1, :end-column 13}, :id "slideshow/anon-expr-5dsFq28JujCkDUjSmGRgkjadCkjGqg-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [8 2 1], :nextjournal/value {:nextjournal/presented {:path [8 2 1], :nextjournal/value "True!", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsFq28JujCkDUjSmGRgkjadCkjGqg-result-8-2-1"}}, :nextjournal/blob-id "5drhjwJfMyW7HVKkxpXMiR42UJmJ9y"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsFq28JujCkDUjSmGRgkjadCkjGqg-result-8-2-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [8 3], :nextjournal/value [{:path [8 3 0], :nextjournal/value "(if (and :val nil)\n\t\"True!\"\n\t\"False :(\")", :nextjournal/render-opts {:loc {:line 121, :end-line 123, :column 1, :end-column 13}, :id "slideshow/anon-expr-5ds4x7AGGkxp2AViwUBrnM8dtC49LW-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [8 3 1], :nextjournal/value {:nextjournal/presented {:path [8 3 1], :nextjournal/value "False :(", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds4x7AGGkxp2AViwUBrnM8dtC49LW-result-8-3-1"}}, :nextjournal/blob-id "5dtWxys7dqN8K8dfRfvLuT5ZWi73VY"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds4x7AGGkxp2AViwUBrnM8dtC49LW-result-8-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [8 4], :nextjournal/value [:p [:<> "Use the "] [:em [:<> "do"]] [:<> " operator to do multiple things in an if form"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [8 5], :nextjournal/value [{:path [8 5 0], :nextjournal/value "(if true\n\t(do (println \"Hey\") \"Hey\"))", :nextjournal/render-opts {:loc {:line 125, :end-line 126, :column 1, :end-column 29}, :id "slideshow/anon-expr-5drXSgkWTYCsLLfBfYFtimt6Ugg7jy-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [8 5 1], :nextjournal/value {:nextjournal/presented {:path [8 5 1], :nextjournal/value "Hey", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drXSgkWTYCsLLfBfYFtimt6Ugg7jy-result-8-5-1"}}, :nextjournal/blob-id "5dtDkPz6LHLuKHcAj99QZWNSnPKsTV"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drXSgkWTYCsLLfBfYFtimt6Ugg7jy-result-8-5-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [8 6], :nextjournal/value [:p [:em [:<> "when"]] [:<> " does the same thing as if and do, but does not accept an else form"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [8 7], :nextjournal/value [{:path [8 7 0], :nextjournal/value "(when true\n\t(println \"Something\")\n\t(println \"Something else\")\n\t[1 2 3])", :nextjournal/render-opts {:loc {:line 128, :end-line 131, :column 1, :end-column 10}, :id "slideshow/anon-expr-5dtqSE1skrzwr6AQCjCUGsEjs59siS-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [8 7 1], :nextjournal/value {:nextjournal/presented {:path [8 7 1], :nextjournal/value [{:path [8 7 1 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [8 7 1 1], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [8 7 1 2], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtqSE1skrzwr6AQCjCUGsEjs59siS-result-8-7-1"}}, :nextjournal/blob-id "5dquJSyNaKQCJHqf7FYe2xZHqe1Lng"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtqSE1skrzwr6AQCjCUGsEjs59siS-result-8-7-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [9], :nextjournal/value [{:path [9 0], :nextjournal/value ["h1" {:id "def-and-let"} [:<> "def and let"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [9 1], :nextjournal/value [:p [:em [:<> "def"]] [:<> " is used to assign a name to a value and adds it to the global context"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [9 2], :nextjournal/value [{:path [9 2 0], :nextjournal/value "(def my-clojure-vector [1 2 3 4])", :nextjournal/render-opts {:loc {:line 136, :end-line 136, :column 1, :end-column 34}, :id "slideshow/my-clojure-vector-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [9 2 1], :nextjournal/value {:nextjournal/presented {:path [9 2 1], :nextjournal/value [{:path [9 2 1 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [9 2 1 1], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [9 2 1 2], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [9 2 1 3], :nextjournal/value 4, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "slideshow/my-clojure-vector-result-9-2-1"}}, :nextjournal/blob-id "5du9ZmAfA6g3BJPEnMVScmo77229oP"}, :nextjournal/render-opts {:id "slideshow/my-clojure-vector-result-9-2-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [9 3], :nextjournal/value [{:path [9 3 0], :nextjournal/value "(str \"This is MY vector -> \" my-clojure-vector) ; str concatenates strings, also turns values into strings automatically", :nextjournal/render-opts {:loc {:line 137, :end-line 137, :column 1, :end-column 48}, :id "slideshow/anon-expr-5dtRzE5o7xUTjmmCrTKVpNquuN2EcD-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [9 3 1], :nextjournal/value {:nextjournal/presented {:path [9 3 1], :nextjournal/value "This is MY vector -> [1 2 3 4]", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtRzE5o7xUTjmmCrTKVpNquuN2EcD-result-9-3-1"}}, :nextjournal/blob-id "5dqqosw85AGHBvHssmVSFCBKv2prg5"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtRzE5o7xUTjmmCrTKVpNquuN2EcD-result-9-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [9 4], :nextjournal/value [:p [:em [:<> "let"]] [:<> " is also used to assign a name to a value but just in a local context, only available within the parentheses of "] [:em [:<> "let"]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [9 5], :nextjournal/value [{:path [9 5 0], :nextjournal/value "(let [a 5 b 6 c 2]\n\t[a b c])", :nextjournal/render-opts {:loc {:line 139, :end-line 140, :column 1, :end-column 10}, :id "slideshow/anon-expr-5dqpPvhLdRpYDprGC9HgfMgUSj8sqh-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [9 5 1], :nextjournal/value {:nextjournal/presented {:path [9 5 1], :nextjournal/value [{:path [9 5 1 0], :nextjournal/value 5, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [9 5 1 1], :nextjournal/value 6, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [9 5 1 2], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dqpPvhLdRpYDprGC9HgfMgUSj8sqh-result-9-5-1"}}, :nextjournal/blob-id "5dtSCBPGrM32rJ3nbs8Tjv8NxmjCtL"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dqpPvhLdRpYDprGC9HgfMgUSj8sqh-result-9-5-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [9 6], :nextjournal/value [:p [:<> "Or also:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [9 7], :nextjournal/value [{:path [9 7 0], :nextjournal/value "(let [[a b c] [1 2 (reduce + (take 10 (range)))]]\n\t[a b c])", :nextjournal/render-opts {:loc {:line 142, :end-line 143, :column 1, :end-column 10}, :id "slideshow/anon-expr-5drdrYCh5UnKCAQSLXg73U619iep8D-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [9 7 1], :nextjournal/value {:nextjournal/presented {:path [9 7 1], :nextjournal/value [{:path [9 7 1 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [9 7 1 1], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [9 7 1 2], :nextjournal/value 45, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drdrYCh5UnKCAQSLXg73U619iep8D-result-9-7-1"}}, :nextjournal/blob-id "5dtyfBerx4nor6ggSA4abGnF54wo9w"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drdrYCh5UnKCAQSLXg73U619iep8D-result-9-7-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [10], :nextjournal/value [{:path [10 0], :nextjournal/value ["h1" {:id "functions"} [:<> "Functions"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [10 1], :nextjournal/value [:p [:<> "We can create a function with "] [:em [:<> "defn"]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [10 2], :nextjournal/value [{:path [10 2 0], :nextjournal/value "(defn my-clojure-function \"Optional docstring\" [arg1 arg2]\n\t(str arg1 arg2))", :nextjournal/render-opts {:loc {:line 149, :end-line 150, :column 1, :end-column 18}, :id "slideshow/my-clojure-function-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [10 3], :nextjournal/value [{:path [10 3 0], :nextjournal/value "(my-clojure-function \"Hello \" \"world!\")", :nextjournal/render-opts {:loc {:line 152, :end-line 152, :column 1, :end-column 40}, :id "slideshow/anon-expr-5dshD4pHjfh2t3su4AQWKGS9yzr9J6-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [10 3 1], :nextjournal/value {:nextjournal/presented {:path [10 3 1], :nextjournal/value "Hello world!", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dshD4pHjfh2t3su4AQWKGS9yzr9J6-result-10-3-1"}}, :nextjournal/blob-id "5drPoafyYYZp8bUs6Snxid5EFkKpN4"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dshD4pHjfh2t3su4AQWKGS9yzr9J6-result-10-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [10 4], :nextjournal/value [:p [:<> "It is possible to define functions with an undefined amount of arguments"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [10 5], :nextjournal/value [{:path [10 5 0], :nextjournal/value "(defn average [& args]\n\t(/ (apply + args) (count args)))", :nextjournal/render-opts {:loc {:line 156, :end-line 157, :column 1, :end-column 34}, :id "slideshow/average-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [10 6], :nextjournal/value [{:path [10 6 0], :nextjournal/value "(average 0 0 1)", :nextjournal/render-opts {:loc {:line 160, :end-line 160, :column 1, :end-column 16}, :id "slideshow/anon-expr-5dqx93aNaq5qeLe7R8ELmACXgqTJHK-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [10 6 1], :nextjournal/value {:nextjournal/presented {:path [10 6 1], :nextjournal/value "1/3", :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dqx93aNaq5qeLe7R8ELmACXgqTJHK-result-10-6-1"}}, :nextjournal/blob-id "5drMM4QABqmcZBzXSrhSzr9ero9Uce"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dqx93aNaq5qeLe7R8ELmACXgqTJHK-result-10-6-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [10 7], :nextjournal/value [:p [:<> "We can also define different behaviours depending on the "] [:em [:<> "arity"]] [:<> " (number of arguments received)"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [10 8], :nextjournal/value [{:path [10 8 0], :nextjournal/value "(defn multi-arity\n\t([arg1 arg2 arg3] \"Three\")\n\t([arg1 arg2] \"Two\")\n\t([arg1] \"One\")\n\t)", :nextjournal/render-opts {:loc {:line 163, :end-line 167, :column 1, :end-column 3}, :id "slideshow/multi-arity-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [10 9], :nextjournal/value [{:path [10 9 0], :nextjournal/value "[(multi-arity 1) (multi-arity 1 2) (multi-arity 1 2 3)]", :nextjournal/render-opts {:loc {:line 169, :end-line 169, :column 1, :end-column 56}, :id "slideshow/anon-expr-5drP6H4mBXC9ccT2UuxT6tMMkMmufg-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [10 9 1], :nextjournal/value {:nextjournal/presented {:path [10 9 1], :nextjournal/value [{:path [10 9 1 0], :nextjournal/value "One", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [10 9 1 1], :nextjournal/value "Two", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [10 9 1 2], :nextjournal/value "Three", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "]"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drP6H4mBXC9ccT2UuxT6tMMkMmufg-result-10-9-1"}}, :nextjournal/blob-id "5drtz1V8QusntsTSnhbdReS9mATCif"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drP6H4mBXC9ccT2UuxT6tMMkMmufg-result-10-9-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [11], :nextjournal/value [{:path [11 0], :nextjournal/value ["h1" {:id "higher-order-functions"} [:<> "Higher Order Functions"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [11 1], :nextjournal/value ["h3" {:id "function-literals"} [:<> "Function Literals"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [11 2], :nextjournal/value [:p [:<> "We can define anonymous functions using "] [:em [:<> "fn"]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [11 3], :nextjournal/value [{:path [11 3 0], :nextjournal/value "(def bands [\n\t\t\t   {:name \"Brown Beaters\"   :genre :rock}\n\t\t\t   {:name \"Sunday Sunshine\" :genre :blues}\n\t\t\t   {:name \"Foolish Beaters\" :genre :rock}\n\t\t\t   {:name \"Monday Blues\"    :genre :blues}\n\t\t\t   {:name \"Friday Fewer\"    :genre :blues}\n\t\t\t   {:name \"Saturday Stars\"  :genre :jazz}\n\t\t\t   {:name \"Sunday Brunch\"   :genre :jazz}\n\t\t\t   ])", :nextjournal/render-opts {:loc {:line 176, :end-line 184, :column 1, :end-column 9}, :id "slideshow/bands-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [11 4], :nextjournal/value [{:path [11 4 0], :nextjournal/value "(def rock-bands\n\t(filter\n\t (fn [band] (= :rock (:genre band)))\n\t bands))", :nextjournal/render-opts {:loc {:line 186, :end-line 189, :column 1, :end-column 10}, :id "slideshow/rock-bands-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [11 4 1], :nextjournal/value {:nextjournal/presented {:path [11 4 1], :nextjournal/value [{:path [11 4 1 0], :nextjournal/value [{:path [11 4 1 0 0], :nextjournal/value [{:path [11 4 1 0 0 0], :nextjournal/value :genre, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [11 4 1 0 0 1], :nextjournal/value :rock, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [11 4 1 0 1], :nextjournal/value [{:path [11 4 1 0 1 0], :nextjournal/value :name, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [11 4 1 0 1 1], :nextjournal/value "Brown Beaters", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "}"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}} {:path [11 4 1 1], :nextjournal/value [{:path [11 4 1 1 0], :nextjournal/value [{:path [11 4 1 1 0 0], :nextjournal/value :genre, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [11 4 1 1 0 1], :nextjournal/value :rock, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [11 4 1 1 1], :nextjournal/value [{:path [11 4 1 1 1 0], :nextjournal/value :name, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [11 4 1 1 1 1], :nextjournal/value "Foolish Beaters", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "}" ")"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "slideshow/rock-bands-result-11-4-1"}}, :nextjournal/blob-id "8VwptChqtVwVcNC88d8sBkJmLzmvx1byGiZntqt8z12AecxzQABvp2m99hR6gRA7YTBSGVXP2DRiDn4niCc6KHPUs2"}, :nextjournal/render-opts {:id "slideshow/rock-bands-result-11-4-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [11 5], :nextjournal/value [:p [:<> "Or we can use #. % represents an argument, in this case a band"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [11 6], :nextjournal/value [{:path [11 6 0], :nextjournal/value "(def rock-bands (filter #(= :rock (:genre %)) bands))", :nextjournal/render-opts {:loc {:line 191, :end-line 191, :column 1, :end-column 54}, :id "slideshow/rock-bands#2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [11 6 1], :nextjournal/value {:nextjournal/presented {:path [11 6 1], :nextjournal/value [{:path [11 6 1 0], :nextjournal/value [{:path [11 6 1 0 0], :nextjournal/value [{:path [11 6 1 0 0 0], :nextjournal/value :genre, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [11 6 1 0 0 1], :nextjournal/value :rock, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [11 6 1 0 1], :nextjournal/value [{:path [11 6 1 0 1 0], :nextjournal/value :name, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [11 6 1 0 1 1], :nextjournal/value "Brown Beaters", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "}"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}} {:path [11 6 1 1], :nextjournal/value [{:path [11 6 1 1 0], :nextjournal/value [{:path [11 6 1 1 0 0], :nextjournal/value :genre, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [11 6 1 1 0 1], :nextjournal/value :rock, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [11 6 1 1 1], :nextjournal/value [{:path [11 6 1 1 1 0], :nextjournal/value :name, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [11 6 1 1 1 1], :nextjournal/value "Foolish Beaters", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "}" ")"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "slideshow/rock-bands#2-result-11-6-1"}}, :nextjournal/blob-id "8VwptChqtVwVcNC88d8sBkJmLzmvx1byGiZntqt8z12AecxzQABvp2m99hR6gRA7YTBSGVXP2DRiDn4niCc6KHPUs2"}, :nextjournal/render-opts {:id "slideshow/rock-bands#2-result-11-6-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [11 7], :nextjournal/value [:p [:<> "It supports multiple arguments:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [11 8], :nextjournal/value [{:path [11 8 0], :nextjournal/value "(#(str %1 %2 %3) 1 2 3)", :nextjournal/render-opts {:loc {:line 193, :end-line 193, :column 1, :end-column 24}, :id "slideshow/anon-expr-5drwfPEz66rw21CU8VdX71JFu9GjVG-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [11 8 1], :nextjournal/value {:nextjournal/presented {:path [11 8 1], :nextjournal/value "123", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drwfPEz66rw21CU8VdX71JFu9GjVG-result-11-8-1"}}, :nextjournal/blob-id "5drLpJQk7bctZqwWfVuwqAtSzqRAEr"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drwfPEz66rw21CU8VdX71JFu9GjVG-result-11-8-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [11 9], :nextjournal/value ["h3" {:id "functions-returning-functions-and-functions-as-values"} [:<> "Functions returning functions and functions as values"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [11 10], :nextjournal/value [:p [:<> "Adder returns a function which we use to define add-five"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [11 11], :nextjournal/value [{:path [11 11 0], :nextjournal/value "(defn adder [x]\n\t(fn [a] (+ x a)))", :nextjournal/render-opts {:loc {:line 197, :end-line 198, :column 1, :end-column 19}, :id "slideshow/adder-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [11 12], :nextjournal/value [{:path [11 12 0], :nextjournal/value "(def add-five (adder 5))", :nextjournal/render-opts {:loc {:line 199, :end-line 199, :column 1, :end-column 25}, :id "slideshow/add-five-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [11 13], :nextjournal/value [{:path [11 13 0], :nextjournal/value "(add-five 100)", :nextjournal/render-opts {:loc {:line 202, :end-line 202, :column 1, :end-column 15}, :id "slideshow/anon-expr-5dtNkZjaANmdG6UMzxdRmQoT5U2kxk-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [11 13 1], :nextjournal/value {:nextjournal/presented {:path [11 13 1], :nextjournal/value 105, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtNkZjaANmdG6UMzxdRmQoT5U2kxk-result-11-13-1"}}, :nextjournal/blob-id "5drrxdv9xj6aFpW4zqF38USSv6K3ca"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtNkZjaANmdG6UMzxdRmQoT5U2kxk-result-11-13-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [12], :nextjournal/value [{:path [12 0], :nextjournal/value ["h1" {:id "destructuring"} [:<> "Destructuring"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [12 1], :nextjournal/value [:p [:<> "We can use destructuring to easily access values in data structures"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [12 2], :nextjournal/value [{:path [12 2 0], :nextjournal/value "(defn some-function [ [first second third & the-rest] ]\n\t(str \"First: \" first \"\\nSecond: \" second \"\\nThird: \" third \"\\nThe rest: \" the-rest))", :nextjournal/render-opts {:loc {:line 208, :end-line 209, :column 1, :end-column 86}, :id "slideshow/some-function-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [12 3], :nextjournal/value [{:path [12 3 0], :nextjournal/value "(some-function [1 2 3 2 5 12 3])", :nextjournal/render-opts {:loc {:line 211, :end-line 211, :column 1, :end-column 33}, :id "slideshow/anon-expr-5ds1CVP9V6YTCVeGFrnskAgVB38NTV-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [12 3 1], :nextjournal/value {:nextjournal/presented {:path [12 3 1], :nextjournal/value "First: 1\nSecond: 2\nThird: 3\nThe rest: (2 5 12 3)", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds1CVP9V6YTCVeGFrnskAgVB38NTV-result-12-3-1"}}, :nextjournal/blob-id "8VxV4BX8tEGLBsZhJiF5P7QYLuUPiPZtLrxgnzd1wBrKcBrHBgVpsjVtv4qoJhhU6HWvyKkqfpGW4d2bUmNkht84fp"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds1CVP9V6YTCVeGFrnskAgVB38NTV-result-12-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [12 4], :nextjournal/value [:p [:<> "Destructuring a map:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [12 5], :nextjournal/value [{:path [12 5 0], :nextjournal/value "(defn some-function [{name :name surname :surname}]\n\t(str \"Hello, \" name \" \" surname))", :nextjournal/render-opts {:loc {:line 214, :end-line 215, :column 1, :end-column 35}, :id "slideshow/some-function#2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [12 6], :nextjournal/value [{:path [12 6 0], :nextjournal/value "(defn some-other-function [{name :name surname :surname :as person}]; We can use the :as keyword to get the map too\n\t(str name \" \" surname \" lives in \" (:city person)))", :nextjournal/render-opts {:loc {:line 216, :end-line 217, :column 1, :end-column 53}, :id "slideshow/some-other-function-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [12 7], :nextjournal/value [{:path [12 7 0], :nextjournal/value "(some-function {:name \"John\" :surname \"Doe\"})", :nextjournal/render-opts {:loc {:line 219, :end-line 219, :column 1, :end-column 46}, :id "slideshow/anon-expr-5duL4Yc9JzDmrrAGYXSytnTDZxw9vN-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [12 7 1], :nextjournal/value {:nextjournal/presented {:path [12 7 1], :nextjournal/value "Hello, John Doe", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5duL4Yc9JzDmrrAGYXSytnTDZxw9vN-result-12-7-1"}}, :nextjournal/blob-id "8Vueqmq7LnybqzjZh5h5VS3t4Hm4VZjKx55UEua29WkCU7tQGDGwh3oXKfK63YJbirCfAqVdgvUrZNowfy6kE64Tr3"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5duL4Yc9JzDmrrAGYXSytnTDZxw9vN-result-12-7-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [12 8], :nextjournal/value [{:path [12 8 0], :nextjournal/value "(some-other-function {:name \"John\" :surname \"Doe\" :city \"Venice\"})", :nextjournal/render-opts {:loc {:line 220, :end-line 220, :column 1, :end-column 67}, :id "slideshow/anon-expr-5drbGx4GzGMsSmA1WbRjX4Du3NUqku-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [12 8 1], :nextjournal/value {:nextjournal/presented {:path [12 8 1], :nextjournal/value "John Doe lives in Venice", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drbGx4GzGMsSmA1WbRjX4Du3NUqku-result-12-8-1"}}, :nextjournal/blob-id "5drbq3DiFfVW9pY9x3tv57YBYRR9Yw"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drbGx4GzGMsSmA1WbRjX4Du3NUqku-result-12-8-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [13], :nextjournal/value [{:path [13 0], :nextjournal/value ["h1" {:id "polymorphism"} [:<> "Polymorphism"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [13 1], :nextjournal/value [:p [:<> "Clojure supports runtime polymorphism with "] [:strong [:<> "multimethods"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Multimethods are defined using defmulti, which takes qhte name of the multimethod and the dispatch function."]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [13 2], :nextjournal/value [{:path [13 2 0], :nextjournal/value "(defmulti encounter (fn [x y] [(:Species x) (:Species y)])) ; the dispatch function returns the species of x and y", :nextjournal/render-opts {:loc {:line 227, :end-line 227, :column 1, :end-column 60}, :id "slideshow/encounter-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 3], :nextjournal/value [:p [:<> "Each method is then implemented using defmethod, passing the name, dispatch value and function body."]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [13 4], :nextjournal/value [{:path [13 4 0], :nextjournal/value "(defmethod encounter [:Bunny :Lion] [b l] :run-away)", :nextjournal/render-opts {:loc {:line 229, :end-line 229, :column 1, :end-column 53}, :id "slideshow/anon-expr-5dtVMxpNY1d8mQwR3wLdKoWDZHkQ4r-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 5], :nextjournal/value [{:path [13 5 0], :nextjournal/value "(defmethod encounter [:Lion :Bunny] [l b] :eat)", :nextjournal/render-opts {:loc {:line 230, :end-line 230, :column 1, :end-column 48}, :id "slideshow/anon-expr-5dtRzfJMmTwaMCyHKQY2WfEdzBg1e5-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 6], :nextjournal/value [{:path [13 6 0], :nextjournal/value "(defmethod encounter [:Lion :Lion] [l1 l2] :fight)", :nextjournal/render-opts {:loc {:line 231, :end-line 231, :column 1, :end-column 51}, :id "slideshow/anon-expr-5dsML7Cx7KyzzBiY8GLqq8dSC5DMxi-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 7], :nextjournal/value [{:path [13 7 0], :nextjournal/value "(defmethod encounter [:Bunny :Bunny] [b1 b2] :mate)", :nextjournal/render-opts {:loc {:line 232, :end-line 232, :column 1, :end-column 52}, :id "slideshow/anon-expr-5dsKzSqBFPonugpauqk9YriZb8i17M-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 8], :nextjournal/value [{:path [13 8 0], :nextjournal/value "(def b1 {:Species :Bunny :other :stuff})", :nextjournal/render-opts {:loc {:line 233, :end-line 233, :column 1, :end-column 41}, :id "slideshow/b1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 9], :nextjournal/value [{:path [13 9 0], :nextjournal/value "(def b2 {:Species :Bunny :other :stuff})", :nextjournal/render-opts {:loc {:line 234, :end-line 234, :column 1, :end-column 41}, :id "slideshow/b2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 10], :nextjournal/value [{:path [13 10 0], :nextjournal/value "(def l1 {:Species :Lion :other :stuff})", :nextjournal/render-opts {:loc {:line 235, :end-line 235, :column 1, :end-column 40}, :id "slideshow/l1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 11], :nextjournal/value [{:path [13 11 0], :nextjournal/value "(def l2 {:Species :Lion :other :stuff})", :nextjournal/render-opts {:loc {:line 236, :end-line 236, :column 1, :end-column 40}, :id "slideshow/l2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 12], :nextjournal/value [{:path [13 12 0], :nextjournal/value "[ (encounter b1 b2)\n(encounter b1 l1)\n(encounter l1 b1)\n(encounter l1 l2) ]", :nextjournal/render-opts {:loc {:line 238, :end-line 241, :column 1, :end-column 20}, :id "slideshow/anon-expr-5ds1XXpHDfcxxuVLyhkYhj4RiSFSqt-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [13 12 1], :nextjournal/value {:nextjournal/presented {:path [13 12 1], :nextjournal/value [{:path [13 12 1 0], :nextjournal/value :mate, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [13 12 1 1], :nextjournal/value :run-away, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [13 12 1 2], :nextjournal/value :eat, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}} {:path [13 12 1 3], :nextjournal/value :fight, :nextjournal/viewer {:name nextjournal.clerk.viewer/keyword-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-atom.inspected-value (str x)]), :hash "5dsp5Uy2KDqwuALVVk33HXMZdpXGBq"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds1XXpHDfcxxuVLyhkYhj4RiSFSqt-result-13-12-1"}}, :nextjournal/blob-id "8VvW7i2HfEttMmkAViTeuUMSNTMreEzcDgAZjnmqNrhkuSz84KAJTNbau91JfZttKS52wZa9PYzH2t4gGkQZ7nYtfB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds1XXpHDfcxxuVLyhkYhj4RiSFSqt-result-13-12-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [13 13], :nextjournal/value [:p [:<> "This would be equivalent to"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [13 14], :nextjournal/value [{:path [13 14 0], :nextjournal/value "(defn encounter [x y]\n\t(cond\n\t\t(and (= :Bunny (:Species x)) (= :Lion (:Species y)))\n\t\t:run-away\n\t\t(and (= :Lion (:Species x)) (= :Bunny (:Species y)))\n\t\t:eat\n\t\t(and (= :Lion (:Species x)) (= :Lion (:Species y)))\n\t\t:fight\n\t\t(and (= :Bunny (:Species x)) (= :Bunny (:Species y)))\n\t\t:mate\n\t\t)\n\t)", :nextjournal/render-opts {:loc {:line 244, :end-line 255, :column 1, :end-column 3}, :id "slideshow/encounter#2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [14], :nextjournal/value [{:path [14 0], :nextjournal/value ["h1" {:id "macros"} [:<> "Macros"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [14 1], :nextjournal/value [:p [:<> "We saw that clojure is homoiconic, so expressions are written things in terms of lists."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "This means we are able to manupulate those lists, after all, they are just another data structure."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "So I could make a function that reverses the expression given, like so:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [14 2], :nextjournal/value [{:path [14 2 0], :nextjournal/value "(defn reverse-form-1 [form]\n\t(reverse form)\n\t)", :nextjournal/render-opts {:loc {:line 263, :end-line 265, :column 1, :end-column 3}, :id "slideshow/reverse-form-1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [14 3], :nextjournal/value [{:path [14 3 0], :nextjournal/value "(reverse-form-1 '(1 2 3 str))", :nextjournal/render-opts {:loc {:line 267, :end-line 267, :column 1, :end-column 30}, :id "slideshow/anon-expr-5dsKvZ3bBudCUJkap1qVEne8sRK45Z-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [14 3 1], :nextjournal/value {:nextjournal/presented {:path [14 3 1], :nextjournal/value [{:path [14 3 1 0], :nextjournal/value str, :nextjournal/viewer {:name nextjournal.clerk.viewer/symbol-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-keyword.inspected-value (str x)]), :hash "5dtwc5kkzq7mnJapK1WH5rcPgXtaUw"}} {:path [14 3 1 1], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [14 3 1 2], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [14 3 1 3], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsKvZ3bBudCUJkap1qVEne8sRK45Z-result-14-3-1"}}, :nextjournal/blob-id "5ds7Lh7tMDMy7WknypaKqpihS27oYM"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsKvZ3bBudCUJkap1qVEne8sRK45Z-result-14-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [14 4], :nextjournal/value [:p [:<> "And then evaluate it:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [14 5], :nextjournal/value [{:path [14 5 0], :nextjournal/value "(eval (reverse-form-1 '(1 2 3 str)))", :nextjournal/render-opts {:loc {:line 269, :end-line 269, :column 1, :end-column 37}, :id "slideshow/anon-expr-5dqonN7S2fuyR3fAXfueAtEmAgjarQ-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [14 5 1], :nextjournal/value {:nextjournal/presented {:path [14 5 1], :nextjournal/value "321", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dqonN7S2fuyR3fAXfueAtEmAgjarQ-result-14-5-1"}}, :nextjournal/blob-id "5dspR5gZsgr6PRFzKVAj6sjuMuBThE"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dqonN7S2fuyR3fAXfueAtEmAgjarQ-result-14-5-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [14 6], :nextjournal/value [:p [:<> "Problem: We need to provide the form using a single quote (') and use "] [:em [:<> "eval"]] [:<> " to evaluate it."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Solution: We use a macro."]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [14 7], :nextjournal/value [{:path [14 7 0], :nextjournal/value "(defmacro reverse-form [form]\n\t(reverse form))", :nextjournal/render-opts {:loc {:line 273, :end-line 274, :column 1, :end-column 17}, :id "slideshow/reverse-form-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [14 8], :nextjournal/value [:div.code-viewer.code-listing [#viewer-eval nextjournal.clerk.render/inspect-presented {:path [14 8 0], :nextjournal/value "(reverse-form (1 2 3 str))\n=> \"321\"", :nextjournal/render-opts {:language "clojure"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code, :hash "5dsJQw12yyyd7TcZEf52VSHxnqnJUC"}}]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}} {:path [14 9], :nextjournal/value [:p [:<> "Macros allow us to extend the language itself by writing code that generates other code at compile time."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:br], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "We can use "] [:em [:<> "macroexpand"]] [:<> " to see how the code would look like when expanded by the compiler."]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [14 10], :nextjournal/value [{:path [14 10 0], :nextjournal/value "(macroexpand '(when true \"Hello\"))", :nextjournal/render-opts {:loc {:line 282, :end-line 282, :column 1, :end-column 35}, :id "slideshow/anon-expr-5dte6DHMEwUDpa45onSCvy61y9puY2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [14 10 1], :nextjournal/value {:nextjournal/presented {:path [14 10 1], :nextjournal/value [{:path [14 10 1 0], :nextjournal/value if, :nextjournal/viewer {:name nextjournal.clerk.viewer/symbol-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-keyword.inspected-value (str x)]), :hash "5dtwc5kkzq7mnJapK1WH5rcPgXtaUw"}} {:path [14 10 1 1], :nextjournal/value true, :nextjournal/viewer {:name nextjournal.clerk.viewer/boolean-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-bool.inspected-value (str x)]), :hash "5drYZi1ixy8HcW8uKJ6GoMNhasTEGB"}} {:path [14 10 1 2], :nextjournal/value [{:path [14 10 1 2 0], :nextjournal/value do, :nextjournal/viewer {:name nextjournal.clerk.viewer/symbol-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-keyword.inspected-value (str x)]), :hash "5dtwc5kkzq7mnJapK1WH5rcPgXtaUw"}} {:path [14 10 1 2 1], :nextjournal/value "Hello", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" ")" ")"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dte6DHMEwUDpa45onSCvy61y9puY2-result-14-10-1"}}, :nextjournal/blob-id "5dstwn8Lb9HTLVKptHxXmzzh7NH75S"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dte6DHMEwUDpa45onSCvy61y9puY2-result-14-10-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [14 11], :nextjournal/value [:p [:<> "We can see that "] [:em [:<> "when"]] [:<> " is actually just a macro, that joins if and do."]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn (fn [slides] (reagent.core/with-let [!state (reagent.core/atom {:current-slide 0, :grid? false, :viewport-width js/innerWidth, :viewport-height js/innerHeight}) ref-fn (fn [el] (when el (swap! !state assoc :stage-el el) (js/addEventListener "resize" (fn* [] (swap! !state assoc :viewport-width js/innerWidth :viewport-height js/innerHeight))) (js/document.addEventListener "keydown" (fn [e] (case (.-key e) "Escape" (swap! !state update :grid? not) "ArrowRight" (when-not (:grid? !state) (swap! !state update :current-slide (fn* [p1__19028#] (min (dec (count slides)) (inc p1__19028#))))) "ArrowLeft" (when-not (:grid? !state) (swap! !state update :current-slide (fn* [p1__19029#] (max 0 (dec p1__19029#))))) nil))))) default-transition {:type :spring, :duration 0.4, :bounce 0.1}] (let [{:keys [grid? current-slide viewport-width viewport-height]} (clojure.core/deref !state)] [:div.overflow-hidden.relative.bg-slate-50.dark:bg-slate-800 {:ref ref-fn, :id "stage", :style {:width viewport-width, :height viewport-height}} (into [:> (.. framer-motion -motion -div) {:style {:width (if grid? viewport-width (* (count slides) viewport-width))}, :initial false, :animate {:x (if grid? 0 (* -1 current-slide viewport-width))}, :transition default-transition}] (map-indexed (fn [i slide] (let [width 250 height 150 gap 40 slides-per-row (int (/ viewport-width (+ gap width))) col (mod i slides-per-row) row (int (/ i slides-per-row))] [:> (.. framer-motion -motion -div) {:initial false, :class ["absolute left-0 top-0 overflow-x-hidden bg-white" (when grid? "rounded-lg shadow-lg overflow-y-hidden cursor-pointer ring-1 ring-slate-200 hover:ring hover:ring-blue-500/50 active:ring-blue-500")], :animate {:width (if grid? width viewport-width), :height (if grid? height viewport-height), :x (if grid? (+ gap (* (+ gap width) col)) (* i viewport-width)), :y (if grid? (+ gap (* (+ gap height) row)) 0)}, :transition default-transition, :on-click (fn* [] (when grid? (swap! !state assoc :current-slide i :grid? false)))} [:> (.. framer-motion -motion -div) {:style {:width viewport-width, :height viewport-height, :transformOrigin "left top"}, :initial false, :animate {:scale (if grid? (/ width viewport-width) 1)}, :transition default-transition} [nextjournal.clerk.render/inspect-presented slide]]])) slides))]))), :hash "5dtTboAL7YYKYwaaPiaCWGcSgfuAoj"}}