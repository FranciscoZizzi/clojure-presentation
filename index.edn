{:path [], :nextjournal/value [{:path [0], :nextjournal/value [{:path [0 0], :nextjournal/value [{:path [0 0 0], :nextjournal/value {:nextjournal/presented {:path [0 0 0], :nextjournal/value [:div.flex.items-center.overflow-hidden.gap-4 [:img.h-12.my-0 {:src "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Clojure_logo.svg/800px-Clojure_logo.svg.png"}] [:h1 "Clojure"]], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drepwH6RgWCBHjgipzY4dwBoTdc2c-result-0-0-0"}}, :nextjournal/blob-id "5dtkDuP6QgDUHrxFTveXqA5qviYuAz"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drepwH6RgWCBHjgipzY4dwBoTdc2c-result-0-0-0"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value ["h1" {:id "brief-history"} [:<> "Brief History"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [1 1], :nextjournal/value [:ul [:li [:<> [:<> "Released in 2007"]]] [:li [:<> [:<> "Created by Rich Hickey"]]] [:li [:<> [:<> "\"I wanted a language as acceptable as Java or C#, put supporting a much simpler programming model, to use for the kinds of information system development I had been doing professionally\""]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [2], :nextjournal/value [{:path [2 0], :nextjournal/value ["h1" {:id "main-features"} [:<> "Main Features"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [2 1], :nextjournal/value [:ul [:li [:<> [:<> "Functional"]]] [:li [:<> [:<> "Dynamic"]]] [:li [:<> [:<> "Homoiconic"]]] [:li [:<> [:<> "Immutability"]]] [:li [:<> [:<> "Great with concurrency and data processing/manipulation"]]] [:li [:<> [:<> "Live programming"]]] [:li [:<> [:<> "Runs on the JVM and can be compiled to Javascript"]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [3], :nextjournal/value [{:path [3 0], :nextjournal/value ["h1" {:id "syntax"} [:<> "Syntax"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [3 1], :nextjournal/value ["h3" {:id "the-syntax-consists-of:"} [:<> "The syntax consists of:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [3 2], :nextjournal/value ["h4" {:id "symbols"} [:<> "Symbols"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [3 3], :nextjournal/value [:ul [:li [:<> [:<> ". + - * / : etc."]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [3 4], :nextjournal/value ["h4" {:id "literals,-mainly:"} [:<> "Literals, mainly:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [3 5], :nextjournal/value [{:path [3 5 0], :nextjournal/value "{\n :string          \"Hello World!\"\n :integer         985\n :floating-point  3.14\n :ratio           15/4\n \t; Used to reduce floating point error\n :bool            [true, false]\n :keyword         :my-keyword\n \t; Could be thought of as enums\n \t; Useful as keys for maps\n :nil             nil\n \t; Represents the Java null\n }", :nextjournal/render-opts {:loc {:line 37, :end-line 49, :column 1, :end-column 3}, :id "slideshow/anon-expr-5dtJHwSrQ5LjxPLYRXrHL12iDi32Kh-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [3 6], :nextjournal/value ["h4" {:id "data-structures"} [:<> "Data Structures"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [3 7], :nextjournal/value [{:path [3 7 0], :nextjournal/value "{\n :list            '(1 2 \"Three\")\n \t; Accessed sequentially\n :vector          [1 :two \"Three\"]\n \t; Random access\n :map             {:key1 \"val1\" :key2 2}\n :set             #{:one 2 \"Three\" 4.5}\n }", :nextjournal/render-opts {:loc {:line 51, :end-line 58, :column 1, :end-column 3}, :id "slideshow/anon-expr-5dsjNaKwKbijAxdjtyezTMGsCeuo2Z-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [3 8], :nextjournal/value [:p [:<> "Notice how no commas are needed"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [4], :nextjournal/value [{:path [4 0], :nextjournal/value ["h1" {:id "evaluation"} [:<> "Evaluation"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 1], :nextjournal/value [:p [:<> "Literals evaluate themselves:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 2], :nextjournal/value [{:path [4 2 0], :nextjournal/value "\"Hello!\"", :nextjournal/render-opts {:loc {:line 65, :end-line 65, :column 1, :end-column 9}, :id "slideshow/anon-expr-5dssnuvh1tjfyjZQRU8GJ78v9adDow-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [4 2 1], :nextjournal/value {:nextjournal/presented {:path [4 2 1], :nextjournal/value "Hello!", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dssnuvh1tjfyjZQRU8GJ78v9adDow-result-4-2-1"}}, :nextjournal/blob-id "5ds1H6fWtUx2siVAwR36rmV6ZkXmZc"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dssnuvh1tjfyjZQRU8GJ78v9adDow-result-4-2-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 3], :nextjournal/value [:p [:<> "Clojure is "] [:strong [:<> "homoiconic"]] [:<> ", which basically means that it's written with its own data structures."]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 4], :nextjournal/value [:p [:<> "Non-empty lists are considered "] [:em [:<> "calls"]] [:<> ". The first element is evaluated as a function call:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 5], :nextjournal/value [{:path [4 5 0], :nextjournal/value "(+ 1 2 3)", :nextjournal/render-opts {:loc {:line 69, :end-line 69, :column 1, :end-column 10}, :id "slideshow/anon-expr-5dsL5sPd2EWmdmJXZW1YGEqyA57TRH-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [4 5 1], :nextjournal/value {:nextjournal/presented {:path [4 5 1], :nextjournal/value 6, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsL5sPd2EWmdmJXZW1YGEqyA57TRH-result-4-5-1"}}, :nextjournal/blob-id "5du1ZLQKSjPYYHUzwXfBTN1NiPeCyQ"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsL5sPd2EWmdmJXZW1YGEqyA57TRH-result-4-5-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [4 6], :nextjournal/value [:p [:<> "If you don't want to evaluate the contents of a list, use ':"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [4 7], :nextjournal/value [{:path [4 7 0], :nextjournal/value "'(+ 1 2 3)", :nextjournal/render-opts {:loc {:line 71, :end-line 71, :column 1, :end-column 11}, :id "slideshow/anon-expr-5dsophEuMoRxB9QdPvw14xqrBbEmbP-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [4 7 1], :nextjournal/value {:nextjournal/presented {:path [4 7 1], :nextjournal/value [{:path [4 7 1 0], :nextjournal/value +, :nextjournal/viewer {:name nextjournal.clerk.viewer/symbol-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-keyword.inspected-value (str x)]), :hash "5dtwc5kkzq7mnJapK1WH5rcPgXtaUw"}} {:path [4 7 1 1], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [4 7 1 2], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [4 7 1 3], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsophEuMoRxB9QdPvw14xqrBbEmbP-result-4-7-1"}}, :nextjournal/blob-id "5duJNV95Zv13WRSSFpnKz1T2cPyoN3"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsophEuMoRxB9QdPvw14xqrBbEmbP-result-4-7-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [5], :nextjournal/value [{:path [5 0], :nextjournal/value ["h1" {:id "boolean-expressions"} [:<> "Boolean Expressions"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [5 1], :nextjournal/value ["h4" {:id "equality"} [:<> "Equality"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [5 2], :nextjournal/value [{:path [5 2 0], :nextjournal/value "(= #{1 2 3} #{3 2 1})", :nextjournal/render-opts {:loc {:line 76, :end-line 76, :column 1, :end-column 22}, :id "slideshow/anon-expr-5dtpd8CofWspNWb85VC3pQhYa3q6uG-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [5 2 1], :nextjournal/value {:nextjournal/presented {:path [5 2 1], :nextjournal/value true, :nextjournal/viewer {:name nextjournal.clerk.viewer/boolean-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-bool.inspected-value (str x)]), :hash "5drYZi1ixy8HcW8uKJ6GoMNhasTEGB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtpd8CofWspNWb85VC3pQhYa3q6uG-result-5-2-1"}}, :nextjournal/blob-id "5druyF3Zrrv7oX13yW9owjpZ3MYgMh"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtpd8CofWspNWb85VC3pQhYa3q6uG-result-5-2-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [5 3], :nextjournal/value [{:path [5 3 0], :nextjournal/value "(= true false)", :nextjournal/render-opts {:loc {:line 77, :end-line 77, :column 1, :end-column 15}, :id "slideshow/anon-expr-5drg7iGSPiiVuw6LEZoMNGZecq9rwg-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [5 3 1], :nextjournal/value {:nextjournal/presented {:path [5 3 1], :nextjournal/value false, :nextjournal/viewer {:name nextjournal.clerk.viewer/boolean-viewer, :render-fn #viewer-fn (fn [x] [:span.cmt-bool.inspected-value (str x)]), :hash "5drYZi1ixy8HcW8uKJ6GoMNhasTEGB"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drg7iGSPiiVuw6LEZoMNGZecq9rwg-result-5-3-1"}}, :nextjournal/blob-id "5dqvLZvTTyepAE3nLwxM3SnZKVQzG7"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drg7iGSPiiVuw6LEZoMNGZecq9rwg-result-5-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [5 4], :nextjournal/value ["h4" {:id "or"} [:<> "Or"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [5 5], :nextjournal/value [:p [:<> "Returns the first true value or the last value if no true values are found"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [5 6], :nextjournal/value [{:path [5 6 0], :nextjournal/value "(or false nil \"Hello! :)\" true)", :nextjournal/render-opts {:loc {:line 80, :end-line 80, :column 1, :end-column 32}, :id "slideshow/anon-expr-5dsyZgshEAvNvh1aRAuax8XySmXwsx-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [5 6 1], :nextjournal/value {:nextjournal/presented {:path [5 6 1], :nextjournal/value "Hello! :)", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsyZgshEAvNvh1aRAuax8XySmXwsx-result-5-6-1"}}, :nextjournal/blob-id "5dqxd8jyXYUgzGyHRBnz3VUPMN8iWM"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsyZgshEAvNvh1aRAuax8XySmXwsx-result-5-6-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [5 7], :nextjournal/value [{:path [5 7 0], :nextjournal/value "(or false false nil)", :nextjournal/render-opts {:loc {:line 81, :end-line 81, :column 1, :end-column 21}, :id "slideshow/anon-expr-5dtcwxMVi7yJEkPa5jDUcrkc3rz8An-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [5 7 1], :nextjournal/value {:nextjournal/presented {:path [5 7 1], :nextjournal/value nil, :nextjournal/viewer {:name nextjournal.clerk.viewer/nil-viewer, :render-fn #viewer-fn (fn [_] [:span.cmt-default.inspected-value "nil"]), :hash "5ds5uDqqy4yJDMFDdH4gQZN84hJLZM"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtcwxMVi7yJEkPa5jDUcrkc3rz8An-result-5-7-1"}}, :nextjournal/blob-id "5duKBGLmNTBkun4C4qg8ZiFhPPWAft"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtcwxMVi7yJEkPa5jDUcrkc3rz8An-result-5-7-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [5 8], :nextjournal/value ["h4" {:id "and"} [:<> "And"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [5 9], :nextjournal/value [:p [:<> "Returns the first false value or the last value if no false values are found"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [5 10], :nextjournal/value [{:path [5 10 0], :nextjournal/value "(and 1 2 3 4 nil 5)", :nextjournal/render-opts {:loc {:line 84, :end-line 84, :column 1, :end-column 20}, :id "slideshow/anon-expr-5dtABuv4AgzJe3Hj93Rb1iRSMAzSCd-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [5 10 1], :nextjournal/value {:nextjournal/presented {:path [5 10 1], :nextjournal/value nil, :nextjournal/viewer {:name nextjournal.clerk.viewer/nil-viewer, :render-fn #viewer-fn (fn [_] [:span.cmt-default.inspected-value "nil"]), :hash "5ds5uDqqy4yJDMFDdH4gQZN84hJLZM"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtABuv4AgzJe3Hj93Rb1iRSMAzSCd-result-5-10-1"}}, :nextjournal/blob-id "5dtzDhCWXThB3QoAT2ZE1rAsyTM2rC"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtABuv4AgzJe3Hj93Rb1iRSMAzSCd-result-5-10-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [5 11], :nextjournal/value [{:path [5 11 0], :nextjournal/value "(and 1 2 3 4)", :nextjournal/render-opts {:loc {:line 85, :end-line 85, :column 1, :end-column 14}, :id "slideshow/anon-expr-5dto64GAfcoUWvW3pRCCeVGd73Gff3-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [5 11 1], :nextjournal/value {:nextjournal/presented {:path [5 11 1], :nextjournal/value 4, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dto64GAfcoUWvW3pRCCeVGd73Gff3-result-5-11-1"}}, :nextjournal/blob-id "5dtadaFipQA9S2L2mHPbrYMVf8bWS3"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dto64GAfcoUWvW3pRCCeVGd73Gff3-result-5-11-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [5 12], :nextjournal/value [:p [:<> "nil and false are both false values, everything else is considered true"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [6], :nextjournal/value [{:path [6 0], :nextjournal/value ["h1" {:id "control-flow"} [:<> "Control Flow"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [6 1], :nextjournal/value [:p [:<> "(if boolean-form"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "then-form"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "optional-else-from)"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [6 2], :nextjournal/value [{:path [6 2 0], :nextjournal/value "(if 4\n\t\"True!\"\n\t\"False :(\")", :nextjournal/render-opts {:loc {:line 93, :end-line 95, :column 1, :end-column 13}, :id "slideshow/anon-expr-5dsFq28JujCkDUjSmGRgkjadCkjGqg-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [6 2 1], :nextjournal/value {:nextjournal/presented {:path [6 2 1], :nextjournal/value "True!", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsFq28JujCkDUjSmGRgkjadCkjGqg-result-6-2-1"}}, :nextjournal/blob-id "5drhjwJfMyW7HVKkxpXMiR42UJmJ9y"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsFq28JujCkDUjSmGRgkjadCkjGqg-result-6-2-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [6 3], :nextjournal/value [{:path [6 3 0], :nextjournal/value "(if (and :val nil)\n\t\"True!\"\n\t\"False :(\")", :nextjournal/render-opts {:loc {:line 96, :end-line 98, :column 1, :end-column 13}, :id "slideshow/anon-expr-5ds4x7AGGkxp2AViwUBrnM8dtC49LW-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [6 3 1], :nextjournal/value {:nextjournal/presented {:path [6 3 1], :nextjournal/value "False :(", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds4x7AGGkxp2AViwUBrnM8dtC49LW-result-6-3-1"}}, :nextjournal/blob-id "5dtWxys7dqN8K8dfRfvLuT5ZWi73VY"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds4x7AGGkxp2AViwUBrnM8dtC49LW-result-6-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [6 4], :nextjournal/value [:p [:<> "Use the "] [:em [:<> "do"]] [:<> " operator to do multiple things in an if form"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [6 5], :nextjournal/value [{:path [6 5 0], :nextjournal/value "(if true\n\t(do (println \"Hey\") \"Hey\"))", :nextjournal/render-opts {:loc {:line 100, :end-line 101, :column 1, :end-column 29}, :id "slideshow/anon-expr-5drXSgkWTYCsLLfBfYFtimt6Ugg7jy-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [6 5 1], :nextjournal/value {:nextjournal/presented {:path [6 5 1], :nextjournal/value "Hey", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drXSgkWTYCsLLfBfYFtimt6Ugg7jy-result-6-5-1"}}, :nextjournal/blob-id "5dtDkPz6LHLuKHcAj99QZWNSnPKsTV"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drXSgkWTYCsLLfBfYFtimt6Ugg7jy-result-6-5-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [6 6], :nextjournal/value [:p [:em [:<> "when"]] [:<> " does the same thing, but it does not accept an else form"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [6 7], :nextjournal/value [{:path [6 7 0], :nextjournal/value "(when true\n\t(println \"Something\")\n\t(println \"Something else\")\n\t[1 2 3])", :nextjournal/render-opts {:loc {:line 103, :end-line 106, :column 1, :end-column 10}, :id "slideshow/anon-expr-5dtqSE1skrzwr6AQCjCUGsEjs59siS-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [6 7 1], :nextjournal/value {:nextjournal/presented {:path [6 7 1], :nextjournal/value [{:path [6 7 1 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [6 7 1 1], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [6 7 1 2], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtqSE1skrzwr6AQCjCUGsEjs59siS-result-6-7-1"}}, :nextjournal/blob-id "5dquJSyNaKQCJHqf7FYe2xZHqe1Lng"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtqSE1skrzwr6AQCjCUGsEjs59siS-result-6-7-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [7], :nextjournal/value [{:path [7 0], :nextjournal/value ["h1" {:id "def-and-defn"} [:<> "def and defn"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 1], :nextjournal/value [:p [:em [:<> "def"]] [:<> " is used to assign a name to a value"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 2], :nextjournal/value [{:path [7 2 0], :nextjournal/value "(def my-clojure-vector [1 2 3 4])", :nextjournal/render-opts {:loc {:line 111, :end-line 111, :column 1, :end-column 34}, :id "slideshow/my-clojure-vector-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 2 1], :nextjournal/value {:nextjournal/presented {:path [7 2 1], :nextjournal/value [{:path [7 2 1 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [7 2 1 1], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [7 2 1 2], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [7 2 1 3], :nextjournal/value 4, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "slideshow/my-clojure-vector-result-7-2-1"}}, :nextjournal/blob-id "5du9ZmAfA6g3BJPEnMVScmo77229oP"}, :nextjournal/render-opts {:id "slideshow/my-clojure-vector-result-7-2-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 3], :nextjournal/value [{:path [7 3 0], :nextjournal/value "(str \"This is MY vector -> \" my-clojure-vector) ; str concatenates strings, also turns values into strings automatically", :nextjournal/render-opts {:loc {:line 112, :end-line 112, :column 1, :end-column 48}, :id "slideshow/anon-expr-5dtRzE5o7xUTjmmCrTKVpNquuN2EcD-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 3 1], :nextjournal/value {:nextjournal/presented {:path [7 3 1], :nextjournal/value "This is MY vector -> [1 2 3 4]", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtRzE5o7xUTjmmCrTKVpNquuN2EcD-result-7-3-1"}}, :nextjournal/blob-id "5dqqosw85AGHBvHssmVSFCBKv2prg5"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dtRzE5o7xUTjmmCrTKVpNquuN2EcD-result-7-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 4], :nextjournal/value [:p [:<> "Functions are values, of course"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 5], :nextjournal/value [{:path [7 5 0], :nextjournal/value "(def plus +)", :nextjournal/render-opts {:loc {:line 114, :end-line 114, :column 1, :end-column 13}, :id "slideshow/plus-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 5 1], :nextjournal/value {:nextjournal/presented {:path [7 5 1], :nextjournal/value "#object[clojure.core$_PLUS_ 0x31b1950e \"clojure.core$_PLUS_@31b1950e\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "slideshow/plus-result-7-5-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "slideshow/plus-result-7-5-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 6], :nextjournal/value [{:path [7 6 0], :nextjournal/value "(plus 1 2)", :nextjournal/render-opts {:loc {:line 115, :end-line 115, :column 1, :end-column 11}, :id "slideshow/anon-expr-5dsHpSWMLonntZtiSXN21i2JpxxeLP-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 6 1], :nextjournal/value {:nextjournal/presented {:path [7 6 1], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsHpSWMLonntZtiSXN21i2JpxxeLP-result-7-6-1"}}, :nextjournal/blob-id "5dsfrW57g1ZKYSAWwnuBnF4h1noYr7"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dsHpSWMLonntZtiSXN21i2JpxxeLP-result-7-6-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 7], :nextjournal/value [:p [:em [:<> "defn"]] [:<> " is used to declare functions"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [7 8], :nextjournal/value [{:path [7 8 0], :nextjournal/value "(defn my-clojure-function \"Optional docstring\" [arg1 arg2]\n\t(str arg1 arg2))", :nextjournal/render-opts {:loc {:line 118, :end-line 119, :column 1, :end-column 18}, :id "slideshow/my-clojure-function-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [7 9], :nextjournal/value [{:path [7 9 0], :nextjournal/value "(my-clojure-function \"Hello \" \"world!\")", :nextjournal/render-opts {:loc {:line 121, :end-line 121, :column 1, :end-column 40}, :id "slideshow/anon-expr-5dshD4pHjfh2t3su4AQWKGS9yzr9J6-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [7 9 1], :nextjournal/value {:nextjournal/presented {:path [7 9 1], :nextjournal/value "Hello world!", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dshD4pHjfh2t3su4AQWKGS9yzr9J6-result-7-9-1"}}, :nextjournal/blob-id "5drPoafyYYZp8bUs6Snxid5EFkKpN4"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dshD4pHjfh2t3su4AQWKGS9yzr9J6-result-7-9-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [8], :nextjournal/value [{:path [8 0], :nextjournal/value ["h1" {:id "functions"} [:<> "Functions"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [8 1], :nextjournal/value [:p [:<> "It is possible to define functions with an undefined amount of arguments"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [8 2], :nextjournal/value [{:path [8 2 0], :nextjournal/value "(defn average [& args]\n\t(/ (apply + args) (count args)))", :nextjournal/render-opts {:loc {:line 127, :end-line 128, :column 1, :end-column 34}, :id "slideshow/average-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [8 3], :nextjournal/value [{:path [8 3 0], :nextjournal/value "(average 0 0 1)", :nextjournal/render-opts {:loc {:line 131, :end-line 131, :column 1, :end-column 16}, :id "slideshow/anon-expr-5dqx93aNaq5qeLe7R8ELmACXgqTJHK-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [8 3 1], :nextjournal/value {:nextjournal/presented {:path [8 3 1], :nextjournal/value "1/3", :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dqx93aNaq5qeLe7R8ELmACXgqTJHK-result-8-3-1"}}, :nextjournal/blob-id "5drMM4QABqmcZBzXSrhSzr9ero9Uce"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5dqx93aNaq5qeLe7R8ELmACXgqTJHK-result-8-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [8 4], :nextjournal/value [:p [:<> "We can also define different behaviours depending on the "] [:em [:<> "arity"]] [:<> " (number of arguments received)"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [8 5], :nextjournal/value [{:path [8 5 0], :nextjournal/value "(defn multi-arity\n\t([arg1 arg2 arg3] \"Three\")\n\t([arg1 arg2] \"Two\")\n\t([arg1] \"One\")\n\t)", :nextjournal/render-opts {:loc {:line 134, :end-line 138, :column 1, :end-column 3}, :id "slideshow/multi-arity-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [8 6], :nextjournal/value [{:path [8 6 0], :nextjournal/value "[(multi-arity 1) (multi-arity 1 2) (multi-arity 1 2 3)]", :nextjournal/render-opts {:loc {:line 140, :end-line 140, :column 1, :end-column 56}, :id "slideshow/anon-expr-5drP6H4mBXC9ccT2UuxT6tMMkMmufg-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [8 6 1], :nextjournal/value {:nextjournal/presented {:path [8 6 1], :nextjournal/value [{:path [8 6 1 0], :nextjournal/value "One", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [8 6 1 1], :nextjournal/value "Two", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [8 6 1 2], :nextjournal/value "Three", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\"" "]"), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drP6H4mBXC9ccT2UuxT6tMMkMmufg-result-8-6-1"}}, :nextjournal/blob-id "5drtz1V8QusntsTSnhbdReS9mATCif"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drP6H4mBXC9ccT2UuxT6tMMkMmufg-result-8-6-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [9], :nextjournal/value [{:path [9 0], :nextjournal/value ["h1" {:id "destructuring"} [:<> "Destructuring"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [9 1], :nextjournal/value [:p [:<> "We can use destructuring to easily access values in data structures"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [9 2], :nextjournal/value [{:path [9 2 0], :nextjournal/value "(defn some-function [ [first second third & the-rest] ]\n\t(str \"First: \" first \"\\nSecond: \" second \"\\nThird: \" third \"\\nThe rest: \" the-rest))", :nextjournal/render-opts {:loc {:line 146, :end-line 147, :column 1, :end-column 86}, :id "slideshow/some-function-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [9 3], :nextjournal/value [{:path [9 3 0], :nextjournal/value "(some-function [1 2 3 2 5 12 3])", :nextjournal/render-opts {:loc {:line 149, :end-line 149, :column 1, :end-column 33}, :id "slideshow/anon-expr-5ds1CVP9V6YTCVeGFrnskAgVB38NTV-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [9 3 1], :nextjournal/value {:nextjournal/presented {:path [9 3 1], :nextjournal/value "First: 1\nSecond: 2\nThird: 3\nThe rest: (2 5 12 3)", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds1CVP9V6YTCVeGFrnskAgVB38NTV-result-9-3-1"}}, :nextjournal/blob-id "8VxV4BX8tEGLBsZhJiF5P7QYLuUPiPZtLrxgnzd1wBrKcBrHBgVpsjVtv4qoJhhU6HWvyKkqfpGW4d2bUmNkht84fp"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5ds1CVP9V6YTCVeGFrnskAgVB38NTV-result-9-3-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [9 4], :nextjournal/value [:p [:<> "Destructuring a map:"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [9 5], :nextjournal/value [{:path [9 5 0], :nextjournal/value "(defn some-function [{name :name surname :surname}]\n\t(str \"Hello, \" name \" \" surname))", :nextjournal/render-opts {:loc {:line 152, :end-line 153, :column 1, :end-column 35}, :id "slideshow/some-function#2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [9 6], :nextjournal/value [{:path [9 6 0], :nextjournal/value "(defn some-other-function [{name :name surname :surname :as person}]; We can use the :as keyword to get the map too\n\t(str name \" \" surname \" lives in \" (:city person)))", :nextjournal/render-opts {:loc {:line 154, :end-line 155, :column 1, :end-column 53}, :id "slideshow/some-other-function-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [9 7], :nextjournal/value [{:path [9 7 0], :nextjournal/value "(some-function {:name \"John\" :surname \"Doe\"})", :nextjournal/render-opts {:loc {:line 157, :end-line 157, :column 1, :end-column 46}, :id "slideshow/anon-expr-5duL4Yc9JzDmrrAGYXSytnTDZxw9vN-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [9 7 1], :nextjournal/value {:nextjournal/presented {:path [9 7 1], :nextjournal/value "Hello, John Doe", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5duL4Yc9JzDmrrAGYXSytnTDZxw9vN-result-9-7-1"}}, :nextjournal/blob-id "8Vueqmq7LnybqzjZh5h5VS3t4Hm4VZjKx55UEua29WkCU7tQGDGwh3oXKfK63YJbirCfAqVdgvUrZNowfy6kE64Tr3"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5duL4Yc9JzDmrrAGYXSytnTDZxw9vN-result-9-7-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [9 8], :nextjournal/value [{:path [9 8 0], :nextjournal/value "(some-other-function {:name \"John\" :surname \"Doe\" :city \"Venice\"})", :nextjournal/render-opts {:loc {:line 158, :end-line 158, :column 1, :end-column 67}, :id "slideshow/anon-expr-5drbGx4GzGMsSmA1WbRjX4Du3NUqku-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [9 8 1], :nextjournal/value {:nextjournal/presented {:path [9 8 1], :nextjournal/value "John Doe lives in Venice", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drbGx4GzGMsSmA1WbRjX4Du3NUqku-result-9-8-1"}}, :nextjournal/blob-id "5drbq3DiFfVW9pY9x3tv57YBYRR9Yw"}, :nextjournal/render-opts {:id "slideshow/anon-expr-5drbGx4GzGMsSmA1WbRjX4Du3NUqku-result-9-8-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [10], :nextjournal/value [{:path [10 0], :nextjournal/value ["h1" {:id "polymorphism"} [:<> "Polymorphism"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [10 1], :nextjournal/value [:p [:<> "TODO"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [11], :nextjournal/value [{:path [11 0], :nextjournal/value ["h1" {:id "let"} [:<> "Let"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [11 1], :nextjournal/value [:p [:<> "TODO"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}} {:path [12], :nextjournal/value [{:path [12 0], :nextjournal/value ["h1" {:id "the-repl"} [:<> "The REPL"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [12 1], :nextjournal/value [:p [:<> "TODO"]], :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}}], :nextjournal/viewer {:render-fn #viewer-fn (fn [blocks opts] [:div.flex.flex-col.justify-center {:style {:min-block-size "100vh"}} (into [:div.text-xl.p-20 {:class ["prose max-w-none prose-h1:mb-0 prose-h2:mb-8 rose-h3:mb-8 prose-h4:mb-8" "prose-h1:text-6xl prose-h2:text-5xl prose-h3:text-3xl prose-h4:text-2xl"]}] (map (fn [{:as block, {:keys [name]} :nextjournal/viewer}] [:div {:class (when (= (quote nextjournal.clerk.viewer/code-viewer) name) "code-viewer")} [nextjournal.clerk.render/inspect-presented block]])) blocks)]), :hash "5dr5F4FZsJqzJACSYHaA7sM5iMiKRJ"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn (fn [slides] (reagent.core/with-let [!state (reagent.core/atom {:current-slide 0, :grid? false, :viewport-width js/innerWidth, :viewport-height js/innerHeight}) ref-fn (fn [el] (when el (swap! !state assoc :stage-el el) (js/addEventListener "resize" (fn* [] (swap! !state assoc :viewport-width js/innerWidth :viewport-height js/innerHeight))) (js/document.addEventListener "keydown" (fn [e] (case (.-key e) "Escape" (swap! !state update :grid? not) "ArrowRight" (when-not (:grid? !state) (swap! !state update :current-slide (fn* [p1__19028#] (min (dec (count slides)) (inc p1__19028#))))) "ArrowLeft" (when-not (:grid? !state) (swap! !state update :current-slide (fn* [p1__19029#] (max 0 (dec p1__19029#))))) nil))))) default-transition {:type :spring, :duration 0.4, :bounce 0.1}] (let [{:keys [grid? current-slide viewport-width viewport-height]} (clojure.core/deref !state)] [:div.overflow-hidden.relative.bg-slate-50.dark:bg-slate-800 {:ref ref-fn, :id "stage", :style {:width viewport-width, :height viewport-height}} (into [:> (.. framer-motion -motion -div) {:style {:width (if grid? viewport-width (* (count slides) viewport-width))}, :initial false, :animate {:x (if grid? 0 (* -1 current-slide viewport-width))}, :transition default-transition}] (map-indexed (fn [i slide] (let [width 250 height 150 gap 40 slides-per-row (int (/ viewport-width (+ gap width))) col (mod i slides-per-row) row (int (/ i slides-per-row))] [:> (.. framer-motion -motion -div) {:initial false, :class ["absolute left-0 top-0 overflow-x-hidden bg-white" (when grid? "rounded-lg shadow-lg overflow-y-hidden cursor-pointer ring-1 ring-slate-200 hover:ring hover:ring-blue-500/50 active:ring-blue-500")], :animate {:width (if grid? width viewport-width), :height (if grid? height viewport-height), :x (if grid? (+ gap (* (+ gap width) col)) (* i viewport-width)), :y (if grid? (+ gap (* (+ gap height) row)) 0)}, :transition default-transition, :on-click (fn* [] (when grid? (swap! !state assoc :current-slide i :grid? false)))} [:> (.. framer-motion -motion -div) {:style {:width viewport-width, :height viewport-height, :transformOrigin "left top"}, :initial false, :animate {:scale (if grid? (/ width viewport-width) 1)}, :transition default-transition} [nextjournal.clerk.render/inspect-presented slide]]])) slides))]))), :hash "5dtTboAL7YYKYwaaPiaCWGcSgfuAoj"}}